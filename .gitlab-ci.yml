default:
  tags:
    - docker

stages:
  - checkLintPython
  - docker
  - pushHarbor
  - pushDockerHub


lint_black:
  stage: checkLintPython
  image: python:3.10
  before_script:
    - pip install black
  script:
    - black --check --diff .
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - "*.py"
        - "**/*.py"

pushHarbor:
  stage: pushHarbor
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - apk add --update --no-cache git
    - docker info
    - echo "$HARBOR_PASSWORD" | docker login -u "$HARBOR_USERNAME" "$HARBOR_HOST" --password-stdin
  script:
    - docker build -t simoverlord .
    - docker tag simoverlord $HARBOR_HOST/$HARBOR_PROJECT/my-app:latest
    - docker push harbor.pg.innopolis.university/sim_overlord100/my-app:latest
  rules:
    - if: ($CI_COMMIT_BRANCH == "main") && ($CI_PIPELINE_SOURCE == "push")

pushDockerHub:
  stage: pushDockerHub 
  image: docker:24.0.5 
  services: 
    - docker:24.0.5-dind 
  before_script:
    - apk add --update --no-cache git
    - docker login -u simoverlord100 -p "$DOCKER_HUB_PASSWORD" 
  script: 
    - docker build -t simoverlord .
    - docker tag simoverlord simoverlord100/simoverlord:latest
    - docker push simoverlord100/simoverlord:latest 
  rules: 
    - if: ($CI_COMMIT_BRANCH == "main") && ($CI_PIPELINE_SOURCE == "push")
    
build_image:
  stage: docker
  image: docker:27.0.0-rc.1-cli
  services:
    - docker:27.0.0-rc.1-dind
  before_script:
    - apk add --no-cache --upgrade sudo
    - apk add --update --no-cache git
  script:
    - sudo apk add install snapd
    - sudo apk remove docker*
    - sudo apk add autoremove
    - for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apk remove $pkg; done
    - sudo apk add ca-certificates curl
    - sudo install -m 0755 -d /etc/apt/keyrings
    - sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
    - sudo chmod a+r /etc/apt/keyrings/docker.asc
    - echo \ "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \ $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \ sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    - sudo apt-get update
    - sudo apk add docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
    

    - sudo docker build -t my-app:latest .devcontainer/
    - stat /builds/v.levasheva/sim-overlord-100-yml-special
    - sudo docker run --rm --privileged --mount  type=bind,source=$(pwd),target=/home/mobile/ws my-app:latest /bin/bash -c "source /opt/ros/humble/setup.bash" 
    - apk update
    - apk upgrade
    - apk add --no-cache python3 py3-pip build-base python3-dev bash
    - python3 -m venv /venv
    - . /venv/bin/activate
    - pip install -U colcon-common-extensions
    - colcon build
  rules:
    - if: ($CI_COMMIT_BRANCH == "main") && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "pull_request")
    

